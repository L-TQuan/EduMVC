@model EduMVC.ViewModels.SectionViewModel
@{
    ViewData["Title"] = "Course details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isCreate = Model == null || Model.Id == Guid.Empty;
    var actionString = isCreate ? "Create" : "Edit";
    var buttonString = isCreate ? "Create" : "Edit";
}
<h1>Course Details</h1>
<div>
    <h3>@Model.CourseName</h3>
    <p>@Model.CourseDescription</p>
</div>
<hr />
<h2>Manage Section</h2>
<form asp-action="@actionString">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" class="form-control" />
    <input type="hidden" asp-for="CourseId" class="form-control" />
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group" style="text-align: center;">
                <input type="submit" value="@buttonString" class="btn btn-primary" />
                <button type="button" class="btn btn-danger" onclick="cancelEdit('@Url.Action("Create", "Section")', '@Model.CourseId')">Cancel</button>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group" style="text-align: right;">
                <a href="~/Course/Create" class="btn btn-secondary">Return to courses</a>
            </div>
            <div id="section-list">
                @await Component.InvokeAsync("SectionList", new { courseId = Model.CourseId })
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        function cancelEdit(url, courseId) {
            window.location.href = url + "?courseId=" + courseId;
        }

        var courseId = '@Model.CourseId';
        function deleteSection(sectionId) {

            $.ajax({
                type: "POST",
                url: "/Section/Delete",
                data: { sectionId },
                success: function (data) {
                    if (data.status) {
                        reloadSectionList(courseId, 1);
                    }
                },
                error: function (err) {

                },
                completed: function (e) {

                }
            });
        }

        function reloadSectionList(courseId, currentPage = 1) {

            $.ajax({
                type: "GET",
                url: "/Section/ReloadSectionList",
                data: { courseId, currentPage },
                success: function (data) {
                    let divSectionList = document.getElementById("section-list");
                    if (divSectionList) {
                        divSectionList.innerHTML = data;
                    }
                },
                error: function (err) {

                },
                completed: function (e) {

                }
            });
        }
    </script>
}